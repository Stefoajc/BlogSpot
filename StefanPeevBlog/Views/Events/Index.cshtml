@model IEnumerable<StefanPeevBlog.Models.EventsLocationViewModel>


<style>
    #map {
        height: 400px;
        width: 100%;
    }
</style>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@*<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.EventCreator.FullName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ImagePath)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EventTitle)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EventBody)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Lat)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Lng)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.EventCreator.FullName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ImagePath)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EventTitle)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EventBody)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Lat)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Lng)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.EventId }) |
            @Html.ActionLink("Details", "Details", new { id=item.EventId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.EventId })
        </td>
    </tr>
}

</table>*@

<div id="map">
</div>

@section scripts{
    <section class="scripts">
        <script type="text/javascript">
            startMapInit();
            function startMapInit() {
                var map;
                var infowindoww;
                var markers = @Html.Raw(Json.Encode(Model));
                var marker;
                $(document).ready(function () {
                    Initialize();
                    var bikeLayer = new google.maps.BicyclingLayer();
                    bikeLayer.setMap(map);
                });

                function Initialize() {
                    // Google has tweaked their interface somewhat - this tells the api to use that new UI
                    google.maps.visualRefresh = true;
                    var Plovdiv = new google.maps.LatLng(42.15, 24.75);

                    // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
                    var mapOptions = {
                        zoom: 10,
                        center: Plovdiv,
                        mapTypeId: google.maps.MapTypeId.ROADMAP,
                        mapTypeControl: true,
                        mapTypeControlOptions:
                        {
                            style: google.maps.MapTypeControlStyle.DROPDOWN_MENU,
                            poistion: google.maps.ControlPosition.TOP_RIGHT,
                            mapTypeIds: [google.maps.MapTypeId.ROADMAP,
                              google.maps.MapTypeId.TERRAIN,
                              google.maps.MapTypeId.HYBRID,
                              google.maps.MapTypeId.SATELLITE]
                        },
                        navigationControl: true,
                        navigationControlOptions:
                        {
                            style: google.maps.NavigationControlStyle.ZOOM_PAN
                        },
                        scaleControl: true,
                        disableDoubleClickZoom: false,
                        draggable: true,
                        streetViewControl: true
                    };

                    // This makes the div with id "map_canvas" a google map
                    map = new google.maps.Map(document.getElementById("map"), mapOptions);


                    // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
                    $.each(markers, function (i, item) {
                        var marker = new google.maps.Marker({
                            'position': new google.maps.LatLng(item.Lat, item.Lng),
                            'map': map,
                            'title': item.Title
                        });

                        // Make the marker-pin blue!
                        marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

                        // put in some information about each json object - in this case, the opening hours.
                        var infowindow = new google.maps.InfoWindow({
                            content: "<div class='infoDiv'><a href=/Events/Details/" + item.EventId +">" + item.Title + "</a></div>"
                        });


                        // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
                        google.maps.event.addListener(marker, 'click', function () {
                            infowindow.open(map, marker);
                        });

                    })
                };
            };
        </script>
    </section>
}